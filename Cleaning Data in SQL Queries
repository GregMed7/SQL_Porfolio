/* 
cleaning Data in SQL Queries
*/


Select *
From NashvilleHousing

--- Standardize Date Format

Select saledateconverted, Convert(Date,Saledate)
From NashvilleHousing

Update NashvilleHousing
Set SaleDate = Convert(Date,Saledate)

Alter Table NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
Set SaleDateConverted = Convert(Date,Saledate)

--- Populate Property Address Data

Select *
From NashvilleHousing
-- Where PropertyAddress is Null
Order By ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.propertyaddress,b.PropertyAddress)
From NashvilleHousing a
Join NashvilleHousing b
	On a.ParcelID=b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
	Where a.PropertyAddress is null

Update a
Set PropertyAddress= ISNULL(a.propertyaddress,b.PropertyAddress)
From NashvilleHousing a
Join NashvilleHousing b
	On a.ParcelID=b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
	Where a.PropertyAddress is null

--- Breaking our Address into Individual Columns

Select PropertyAddress
From NashvilleHousing
-- Where PropertyAddress is Null
-- Order By ParcelID

Select
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', propertyaddress) -1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', propertyaddress) +1, Len(PropertyAddress)) as Address
From NashvilleHousing

Alter Table NashvilleHousing
Add PropertySplitAddress NVarchar(255);

Update NashvilleHousing
Set PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', propertyaddress) -1)

Alter Table NashvilleHousing
Add PropertySplitCity NVarchar(255);

Update NashvilleHousing
Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', propertyaddress) +1, Len(PropertyAddress))

Select *
From NashvilleHousing


Select OwnerAddress
From NashvilleHousing

Select PARSENAME(Replace(owneraddress,',','.') ,3)
, PARSENAME(Replace(owneraddress,',','.') ,2)
, PARSENAME(Replace(owneraddress,',','.') ,1)
From NashvilleHousing

Alter Table Nashvillehousing
Add OwnerSplitAddress Nvarchar(255)

Update NashvilleHousing
Set OwnerSplitAddress = PARSENAME(Replace(owneraddress,',','.') ,3)

Alter Table Nashvillehousing
Add OwnerSplitCity Nvarchar(255)

Update NashvilleHousing
Set OwnerSplitCity = PARSENAME(Replace(owneraddress,',','.') ,2)

Alter Table Nashvillehousing
Add OwnerSplitState Nvarchar(255)

Update NashvilleHousing
Set OwnerSplitState = PARSENAME(Replace(owneraddress,',','.') ,1)

Select *
From NashvilleHousing


---- Change Y and N in "Sold as Vacant" field

Select Distinct(SoldAsVacant), Count(soldasvacant)
From nashvillehousing
Group By SoldAsVacant
Order By 2


Select SoldasVacant,
	Case When Soldasvacant = 'Y' Then 'Yes'
		When Soldasvacant = 'N' Then 'No'
		Else Soldasvacant
		End
From NashvilleHousing

Update NashvilleHousing
Set SoldAsVacant = Case When Soldasvacant = 'Y' Then 'Yes'
		When Soldasvacant = 'N' Then 'No'
		Else Soldasvacant
		End

---- Remove Duplicates

WITH ROWNUMCTE AS (
Select *,
	ROW_NUMBER() Over (
	Partition BY ParcelID,
				PropertyAddress,
				SalePrice,
				SaleDate,
				LegalReference
				Order BY
					UniqueID
					) Row_num


From NashvilleHousing
-- Order By ParcelID
)
Select *
FROM ROWNUMCTE
Where Row_num > 1
--- Order BY PropertyAddress

---- Delete Unused Columns

Select *
From NashvilleHousing

Alter Table NashvilleHousing
Drop Column OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
